jpeg("tsneperplexities_multiplot.jpg", 15, 7, units="in", res=400)
par(mfcol=c(2,6), oma=c(5,5,4,1))
pvl <- c(10,20,30,40,45)
# make plots varying perplexity
for(t in 1:5){
ptty <- Rtsne(t(data), perplexity=pvl[t])$Y
plot(ptty,
col=colgrp1,
main=paste0("P = ",pvl[t]), xlab="", ylab="")
plot(ptty,
col=colgrp2, main="", xlab="", ylab="")
}
# risk group legend
plot.new()
legend("topleft",
legend=c("0","1"),
col=c("red","blue"),
pch=c(16,16), title="Binary Risk Group")
# cytogenetic group legend
plot.new()
legend("left",
legend=c("inv(16)", "MLL", "Normal", "Other", "t(8;21)", "Unknown"),
col=colgrp2,
pch=c(rep(16, 6)), title="Primary Cytogenetic Group")
mtext("TSNE_Axis1", side=1,line=2,cex=1.2, outer=T)
mtext("TSNE_Axis2", side=2,line=2,cex=1.2, outer=T)
mtext("TSNE Perplexities", side=3,line=1.8,cex=2, outer=T)
dev.off()
jpeg("tsneperplexities_multiplot.jpg", 15, 7, units="in", res=400)
par(mfcol=c(2,6), oma=c(5,5,4,1))
pvl <- c(10,20,30,40,45)
# make plots varying perplexity
for(t in 1:5){
ptty <- Rtsne(t(data), perplexity=pvl[t])$Y
plot(ptty,
col=colgrp1,
main=paste0("P = ",pvl[t]), xlab="", ylab="")
plot(ptty,
col=colgrp2, main="", xlab="", ylab="")
}
# risk group legend
plot.new()
legend("topleft",
legend=c("0","1"),
col=c("red","blue"),
pch=c(16,16), title="Binary Risk Group")
# cytogenetic group legend
plot.new()
legend("left",
legend=c("inv(16)", "MLL", "Normal", "Other", "t(8;21)", "Unknown"),
col=colgrp2,
pch=c(rep(16, 6)), title="Primary Cytogenetic Group")
mtext("TSNE_Axis1", side=1,line=2,cex=1.2, outer=T)
mtext("TSNE_Axis2", side=2,line=2,cex=1.2, outer=T)
mtext("Tuning TSNE Perplexities", side=3,line=1.8,cex=2, outer=T)
dev.off()
jpeg("tsneperplexities_multiplot.jpg", 15, 7, units="in", res=400)
par(mfcol=c(2,6), oma=c(5,5,4,1))
pvl <- c(10,20,30,40,45)
# make plots varying perplexity
set.seed(2019)
for(t in 1:5){
ptty <- Rtsne(t(data), perplexity=pvl[t])$Y
plot(ptty,
col=colgrp1,
main=paste0("P = ",pvl[t]), xlab="", ylab="")
plot(ptty,
col=colgrp2, main="", xlab="", ylab="")
}
# risk group legend
plot.new()
legend("topleft",
legend=c("0","1"),
col=c("red","blue"),
pch=c(16,16), title="Binary Risk Group")
# cytogenetic group legend
plot.new()
legend("left",
legend=c("inv(16)", "MLL", "Normal", "Other", "t(8;21)", "Unknown"),
col=colgrp2,
pch=c(rep(16, 6)), title="Primary Cytogenetic Group")
mtext("TSNE_Axis1", side=1,line=2,cex=1.2, outer=T)
mtext("TSNE_Axis2", side=2,line=2,cex=1.2, outer=T)
mtext("Tuning TSNE Perplexities", side=3,line=1.8,cex=2, outer=T)
dev.off()
summary(st$xg1_imp)
X = data_pca
choice = "var"
axes = 1 # first pc
dd1 <- facto_summarize(X, element = choice, result = "contrib",
axes = axes)
axes = c(1,2,3) # first 3 pcs
dd123 <- facto_summarize(X, element = choice, result = "contrib",
axes = axes)
identical(dd1$name,dd123$name)
colnames(dd1) <- c("name","cont_pca1")
pccont <- cbind(dd1,data.frame(cont_pca123=dd123$contrib))
# append whether feature is above/below uniformity threshold
contrib <- pccont$cont_pca1
names(contrib) <- rownames(dd)
theo_contrib1 <- 100/length(contrib)
axes = c(1,2,3) # first 3 pcs
eig <- get_eigenvalue(X)[axes, 1]
theo_contrib123 <- sum(theo_contrib1 * eig)/sum(eig)
pccont$above_theoimp_pc1 <- ifelse(pccont$cont_pca1>theo_contrib1,"Y","N")
pccont$above_theoimp_pc123 <- ifelse(pccont$cont_pca123>theo_contrib123,"Y","N")
table(pccont$above_theoimp_pc1, pccont$above_theoimp_pc123)
load("pca_degcont.rda")
summary(pccont$cont_pca1)
lasso1rank.abs = rank(abs(st$lasso_coef_rep1))
svm1rank.abs = rank(abs(st$svm1_weights))
xg5rank = rank(st$xg5_imp)
rf10krank = rank(st$rfnb_10k_MeanDecNodeImp)
# append pca ranks
pcdf <- pccont
pcdf <- pcdf[order(match(pcdf$name, st$X)),]
identical(pcdf$name, st$X)
pcvc1 <- rank(pcdf$cont_pca1)
pcvc123 <- rank(pcdf$cont_pca123)
# rankdf
rankdf.all.abs = data.frame(lasso1rank.abs=lasso1rank,
svm1rank.abs=svm1rank,
xg5=xg5rank,
rf10k=rf10krank,
pcc1=pcvc1,
pcc123=pcvc123)
rankdf.all.abs = data.frame(lasso1rank.abs=lasso1rank.abs,
svm1rank.abs=svm1rank.abs,
xg5=xg5rank,
rf10k=rf10krank,
pcc1=pcvc1,
pcc123=pcvc123)
cormat.all.abs <- round(cor(rankdf.all.abs, method="spearman"),3)
stsub <- st[!st$xg5_imp==0,]
pcdfsub <- pcdf[!st$xg5_imp==0,]
lasso1rank.abs = rank(abs(stsub$lasso_coef_rep1))
svm1rank.abs = rank(abs(stsub$svm1_weights))
xg5rank = rank(stsub$xg5_imp)
rf10krank = rank(stsub$rfnb_10k_MeanDecNodeImp)
pcvc1sub <- rank(pcdfsub$cont_pca1)
pcvc123sub <- rank(pcdfsub$cont_pca123)
rankdf.sub.abs = data.frame(lasso1.abs=lasso1rank.abs,
svm1.abs=svm1rank.abs,
xg5=xg5rank,
rf10k=rf10krank,
pcc1=pcvc1sub,
pcc123=pcvc123sub)
cormat.xg5genes.abs <- round(cor(rankdf.sub.abs, method="spearman"),3)
install.packages("patchwork")
library(grid); library(gridExtra)
cp1 <- arrangeGrob(cp1,
top = textGrob("A", x = unit(0, "npc"),
y   = unit(1, "npc"), just=c("left","top"),
gp=gpar(col="black", fontsize=18, fontfamily="Arial")))
cp1 <- ggcorrplot(cormat.all, hc.order = FALSE, type = "lower",
outline.col = "white",
legend.title="Rho", title="All DEGs") +
geom_tile(colour = "black") +
geom_text(aes(label = round(value, 1)))
lasso1rank = rank(st$lasso_coef_rep1)
svm1rank = rank(st$svm1_weights)
xg5rank = rank(st$xg5_imp)
rf10krank = rank(st$rfnb_10k_MeanDecNodeImp)
# append pca ranks
pcdf <- pccont
pcdf <- pcdf[order(match(pcdf$name, st$X)),]
identical(pcdf$name, st$X)
pcvc1 <- rank(pcdf$cont_pca1)
pcvc123 <- rank(pcdf$cont_pca123)
# rankdf
rankdf.all = data.frame(lasso1=lasso1rank,
svm1=svm1rank,
xg5=xg5rank,
rf10k=rf10krank,
pcc1=pcvc1,
pcc123=pcvc123)
cormat.all <- round(cor(rankdf.all,method="spearman"),3)
stsub <- st[!st$lasso_coef_rep1==0,]
pcdfsub <- pcdf[!st$lasso_coef_rep1==0,]
lasso1rank = rank(stsub$lasso_coef_rep1)
svm1rank = rank(stsub$svm1_weights)
xg5rank = rank(stsub$xg5_imp)
rf10krank = rank(stsub$rfnb_10k_MeanDecNodeImp)
pcvc1sub <- rank(pcdfsub$cont_pca1)
pcvc123sub <- rank(pcdfsub$cont_pca123)
rankdf.sub = data.frame(lasso1=lasso1rank,
svm1=svm1rank,
xg5=xg5rank,
rf10k=rf10krank,
pcc1=pcvc1sub,
pcc123=pcvc123sub)
cormat.lasso1 <- round(cor(rankdf.sub, method="spearman"),3)
stsub <- st[!st$xg5_imp==0,]
pcdfsub <- pcdf[!st$xg5_imp==0,]
lasso1rank = rank(stsub$lasso_coef_rep1)
svm1rank = rank(stsub$svm1_weights)
xg5rank = rank(stsub$xg5_imp)
rf10krank = rank(stsub$rfnb_10k_MeanDecNodeImp)
pcvc1sub <- rank(pcdfsub$cont_pca1)
pcvc123sub <- rank(pcdfsub$cont_pca123)
rankdf.sub = data.frame(lasso1=lasso1rank,
svm1=svm1rank,
xg5=xg5rank,
rf10k=rf10krank,
pcc1=pcvc1sub,
pcc123=pcvc123sub)
cormat.xg5genes <- round(cor(rankdf.sub, method="spearman"),3)
lasso1rank.abs = rank(abs(st$lasso_coef_rep1))
svm1rank.abs = rank(abs(st$svm1_weights))
xg5rank = rank(st$xg5_imp)
rf10krank = rank(st$rfnb_10k_MeanDecNodeImp)
# append pca ranks
pcdf <- pccont
pcdf <- pcdf[order(match(pcdf$name, st$X)),]
identical(pcdf$name, st$X)
pcvc1 <- rank(pcdf$cont_pca1)
pcvc123 <- rank(pcdf$cont_pca123)
# rankdf
rankdf.all.abs = data.frame(lasso1rank.abs=lasso1rank.abs,
svm1rank.abs=svm1rank.abs,
xg5=xg5rank,
rf10k=rf10krank,
pcc1=pcvc1,
pcc123=pcvc123)
cormat.all.abs <- round(cor(rankdf.all.abs, method="spearman"),3)
# among lasso1 genes, with reranking
stsub <- st[!st$lasso_coef_rep1==0,]
pcdfsub <- pcdf[!st$lasso_coef_rep1==0,]
lasso1rank.abs = rank(abs(stsub$lasso_coef_rep1))
svm1rank.abs = rank(abs(stsub$svm1_weights))
xg5rank = rank(stsub$xg5_imp)
rf10krank = rank(stsub$rfnb_10k_MeanDecNodeImp)
pcvc1sub <- rank(pcdfsub$cont_pca1)
pcvc123sub <- rank(pcdfsub$cont_pca123)
rankdf.sub.abs = data.frame(lasso1.abs=lasso1rank.abs,
svm1.abs=svm1rank.abs,
xg5=xg5rank,
rf10k=rf10krank,
pcc1=pcvc1sub,
pcc123=pcvc123sub)
cormat.lasso1.abs <- round(cor(rankdf.sub.abs, method="spearman"),3)
# among xg5 genes, with reranking
stsub <- st[!st$xg5_imp==0,]
pcdfsub <- pcdf[!st$xg5_imp==0,]
lasso1rank.abs = rank(abs(stsub$lasso_coef_rep1))
svm1rank.abs = rank(abs(stsub$svm1_weights))
xg5rank = rank(stsub$xg5_imp)
rf10krank = rank(stsub$rfnb_10k_MeanDecNodeImp)
pcvc1sub <- rank(pcdfsub$cont_pca1)
pcvc123sub <- rank(pcdfsub$cont_pca123)
rankdf.sub.abs = data.frame(lasso1.abs=lasso1rank.abs,
svm1.abs=svm1rank.abs,
xg5=xg5rank,
rf10k=rf10krank,
pcc1=pcvc1sub,
pcc123=pcvc123sub)
cormat.xg5genes.abs <- round(cor(rankdf.sub.abs, method="spearman"),3)
cp1 <- ggcorrplot(cormat.all, hc.order = FALSE, type = "lower",
outline.col = "white",
legend.title="Rho", title="All DEGs") +
geom_tile(colour = "black") +
geom_text(aes(label = round(value, 1)))
cp2 <- ggcorrplot(cormat.lasso1, hc.order = FALSE, type = "lower",
outline.col = "white",
legend.title="Rho", title="Lasso1 Genes") +
geom_tile(colour = "black") +
geom_text(aes(label = round(value, 1)))
cp3 <- ggcorrplot(cormat.xg5genes, hc.order = FALSE, type = "lower",
outline.col = "white",
legend.title="Rho", title="XGB5 Genes") +
geom_tile(colour = "black") +
geom_text(aes(label = round(value, 1)))
cp4 <- ggcorrplot(cormat.all.abs, hc.order = FALSE, type = "lower",
outline.col = "white",
legend.title="Rho (Abs.)", title="XGB5 Genes") +
geom_tile(colour = "black") +
geom_text(aes(label = round(value, 1)))
cp5 <- ggcorrplot(cormat.lasso1.abs, hc.order = FALSE, type = "lower",
outline.col = "white",
legend.title="Rho (Abs.)", title="XGB5 Genes") +
geom_tile(colour = "black") +
geom_text(aes(label = round(value, 1)))
cp6 <- ggcorrplot(cormat.xg5genes.abs, hc.order = FALSE, type = "lower",
outline.col = "white",
legend.title="Rho (Abs.)", title="XGB5 Genes") +
geom_tile(colour = "black") +
geom_text(aes(label = round(value, 1)))
jpeg("corhmmulti_6plots_consensusimprank.jpg", 12, 10, units="in", res=400)
grid.arrange(cp1,cp2,cp3, cp4, cp5, cp6, layout_matrix=matrix(c(1,2,3, 4,5,6), nrow=2, byrow=TRUE))
dev.off()
cp1 <- arrangeGrob(cp1,
top = textGrob("A", x = unit(0, "npc"),
y   = unit(1, "npc"), just=c("left","top"),
gp=gpar(col="black", fontsize=18, fontfamily="Arial")))
cp1
grid.arrange(cp1)
grid.arrange(cp1,cp1,cp1,ncol=1)
grid.arrange(cp1,cp1,cp1,cp1,cp1,cp1, ncol=3)
cp1 <- arrangeGrob(cp1,
top = textGrob("A.", x = unit(0, "npc"),
y   = unit(1, "npc"), just=c("left","top"),
gp=gpar(col="black", fontsize=18, fontfamily="Arial")))
cp2 <- arrangeGrob(cp2,
top = textGrob("B.", x = unit(0, "npc"),
y   = unit(1, "npc"), just=c("left","top"),
gp=gpar(col="black", fontsize=18, fontfamily="Arial")))
cp3 <- arrangeGrob(cp4,
top = textGrob("C.", x = unit(0, "npc"),
y   = unit(1, "npc"), just=c("left","top"),
gp=gpar(col="black", fontsize=18, fontfamily="Arial")))
cp4 <- arrangeGrob(cp4,
top = textGrob("D.", x = unit(0, "npc"),
y   = unit(1, "npc"), just=c("left","top"),
gp=gpar(col="black", fontsize=18, fontfamily="Arial")))
cp5 <- arrangeGrob(cp5,
top = textGrob("E.", x = unit(0, "npc"),
y   = unit(1, "npc"), just=c("left","top"),
gp=gpar(col="black", fontsize=18, fontfamily="Arial")))
cp6 <- arrangeGrob(cp6,
top = textGrob("F.", x = unit(0, "npc"),
y   = unit(1, "npc"), just=c("left","top"),
gp=gpar(col="black", fontsize=18, fontfamily="Arial")))
jpeg("corhmmulti_6plots_insetlabs_consensusimprank.jpg", 12, 10, units="in", res=400)
grid.arrange(cp1, cp2, cp3, cp4, cp5, cp5, ncol=3)
dev.off()
cp1 <- ggcorrplot(cormat.all, hc.order = FALSE, type = "lower",
outline.col = "white",
legend.title="Rho", title="All DEGs") +
geom_tile(colour = "black") +
geom_text(aes(label = round(value, 1)))
cp2 <- ggcorrplot(cormat.lasso1, hc.order = FALSE, type = "lower",
outline.col = "white",
legend.title="Rho", title="Lasso1 Genes") +
geom_tile(colour = "black") +
geom_text(aes(label = round(value, 1)))
cp3 <- ggcorrplot(cormat.xg5genes, hc.order = FALSE, type = "lower",
outline.col = "white",
legend.title="Rho", title="XGB5 Genes") +
geom_tile(colour = "black") +
geom_text(aes(label = round(value, 1)))
cp4 <- ggcorrplot(cormat.all.abs, hc.order = FALSE, type = "lower",
outline.col = "white",
legend.title="Rho (Abs.)", title="All DEGs") +
geom_tile(colour = "black") +
geom_text(aes(label = round(value, 1)))
cp5 <- ggcorrplot(cormat.lasso1.abs, hc.order = FALSE, type = "lower",
outline.col = "white",
legend.title="Rho (Abs.)", title="Lasso1 Genes") +
geom_tile(colour = "black") +
geom_text(aes(label = round(value, 1)))
cp6 <- ggcorrplot(cormat.xg5genes.abs, hc.order = FALSE, type = "lower",
outline.col = "white",
legend.title="Rho (Abs.)", title="XGB5 Genes") +
geom_tile(colour = "black") +
geom_text(aes(label = round(value, 1)))
# composite plot
jpeg("corhmmulti_6plots_consensusimprank.jpg", 12, 10, units="in", res=400)
grid.arrange(cp1,cp2,cp3, cp4, cp5, cp6, layout_matrix=matrix(c(1,2,3, 4,5,6), nrow=2, byrow=TRUE))
dev.off()
# with lettering inset labels
cp1 <- arrangeGrob(cp1,
top = textGrob("A.", x = unit(0, "npc"),
y   = unit(1, "npc"), just=c("left","top"),
gp=gpar(col="black", fontsize=18, fontfamily="Arial")))
cp2 <- arrangeGrob(cp2,
top = textGrob("B.", x = unit(0, "npc"),
y   = unit(1, "npc"), just=c("left","top"),
gp=gpar(col="black", fontsize=18, fontfamily="Arial")))
cp3 <- arrangeGrob(cp4,
top = textGrob("C.", x = unit(0, "npc"),
y   = unit(1, "npc"), just=c("left","top"),
gp=gpar(col="black", fontsize=18, fontfamily="Arial")))
cp4 <- arrangeGrob(cp4,
top = textGrob("D.", x = unit(0, "npc"),
y   = unit(1, "npc"), just=c("left","top"),
gp=gpar(col="black", fontsize=18, fontfamily="Arial")))
cp5 <- arrangeGrob(cp5,
top = textGrob("E.", x = unit(0, "npc"),
y   = unit(1, "npc"), just=c("left","top"),
gp=gpar(col="black", fontsize=18, fontfamily="Arial")))
cp6 <- arrangeGrob(cp6,
top = textGrob("F.", x = unit(0, "npc"),
y   = unit(1, "npc"), just=c("left","top"),
gp=gpar(col="black", fontsize=18, fontfamily="Arial")))
jpeg("corhmmulti_6plots_insetlabs_consensusimprank.jpg", 12, 10, units="in", res=400)
grid.arrange(cp1, cp2, cp3, cp4, cp5, cp5, ncol=3)
dev.off()
cp1 <- ggcorrplot(cormat.all, hc.order = FALSE, type = "lower",
outline.col = "white",
legend.title="Rho", title="All DEGs") +
geom_tile(colour = "black") +
geom_text(aes(label = round(value, 1)))
cp2 <- ggcorrplot(cormat.lasso1, hc.order = FALSE, type = "lower",
outline.col = "white",
legend.title="Rho", title="Lasso1 Genes") +
geom_tile(colour = "black") +
geom_text(aes(label = round(value, 1)))
cp3 <- ggcorrplot(cormat.xg5genes, hc.order = FALSE, type = "lower",
outline.col = "white",
legend.title="Rho", title="XGB5 Genes") +
geom_tile(colour = "black") +
geom_text(aes(label = round(value, 1)))
cp4 <- ggcorrplot(cormat.all.abs, hc.order = FALSE, type = "lower",
outline.col = "white",
legend.title="Rho (Abs.)", title="All DEGs") +
geom_tile(colour = "black") +
geom_text(aes(label = round(value, 1)))
cp5 <- ggcorrplot(cormat.lasso1.abs, hc.order = FALSE, type = "lower",
outline.col = "white",
legend.title="Rho (Abs.)", title="Lasso1 Genes") +
geom_tile(colour = "black") +
geom_text(aes(label = round(value, 1)))
cp6 <- ggcorrplot(cormat.xg5genes.abs, hc.order = FALSE, type = "lower",
outline.col = "white",
legend.title="Rho (Abs.)", title="XGB5 Genes") +
geom_tile(colour = "black") +
geom_text(aes(label = round(value, 1)))
# composite plot
jpeg("corhmmulti_6plots_consensusimprank.jpg", 12, 10, units="in", res=400)
grid.arrange(cp1,cp2,cp3, cp4, cp5, cp6, layout_matrix=matrix(c(1,2,3, 4,5,6), nrow=2, byrow=TRUE))
dev.off()
# with lettering inset labels
cp1 <- arrangeGrob(cp1,
top = textGrob("A.", x = unit(0, "npc"),
y   = unit(1, "npc"), just=c("left","top"),
gp=gpar(col="black", fontsize=18, fontfamily="Arial")))
cp2 <- arrangeGrob(cp2,
top = textGrob("B.", x = unit(0, "npc"),
y   = unit(1, "npc"), just=c("left","top"),
gp=gpar(col="black", fontsize=18, fontfamily="Arial")))
cp3 <- arrangeGrob(cp3,
top = textGrob("C.", x = unit(0, "npc"),
y   = unit(1, "npc"), just=c("left","top"),
gp=gpar(col="black", fontsize=18, fontfamily="Arial")))
cp4 <- arrangeGrob(cp4,
top = textGrob("D.", x = unit(0, "npc"),
y   = unit(1, "npc"), just=c("left","top"),
gp=gpar(col="black", fontsize=18, fontfamily="Arial")))
cp5 <- arrangeGrob(cp5,
top = textGrob("E.", x = unit(0, "npc"),
y   = unit(1, "npc"), just=c("left","top"),
gp=gpar(col="black", fontsize=18, fontfamily="Arial")))
cp6 <- arrangeGrob(cp6,
top = textGrob("F.", x = unit(0, "npc"),
y   = unit(1, "npc"), just=c("left","top"),
gp=gpar(col="black", fontsize=18, fontfamily="Arial")))
jpeg("corhmmulti_6plots_insetlabs_consensusimprank.jpg", 12, 10, units="in", res=400)
grid.arrange(cp1, cp2, cp3, cp4, cp5, cp5, ncol=3)
dev.off()
jpeg("corhmmulti_6plots_insetlabs_consensusimprank.jpg", 12, 10, units="in", res=400)
grid.arrange(cp1, cp2, cp3, cp4, cp5, cp6, ncol=3)
dev.off()
usig <- list()
usig[["lasso1"]] = as.character(st[!st$lasso_coef_rep1==0,]$X)
usig[["svm1"]] = as.character(st[abs(st$svm1_weights)>=0.008,]$X)
usig[["rf10"]] = as.character(st[abs(st$rfnb_10k_MeanDecNodeImp)>=0.1,]$X)
usig[["xg5"]] = as.character(st[!st$xg5_imp==0,]$X)
usig[["pc1"]] = pccont[pccont$above_theoimp_pc1=="Y",]$name
usig[["pc123"]] = pccont[pccont$above_theoimp_pc1=="Y",]$name
usig[[1]]
eidsig <- unique(unlist(usig))
head(st)
eidsig <- unique(unlist(usig))
stsig <- st[st$X %in% eidsig,]
write.csv(stsig, file="stdout_consensusgenes.csv")
setwd("~/Documents/GitHub/ConsensusML/composite_code/rnotebook/supplemental_materials")
setwd("~/Documents/GitHub/ConsensusML/composite_code/rnotebook")
load("data/sesetfilt_degseahack_targetaml.rda")
data = assay(degfilt.se)
st <- read.csv("data/standouttable.csv")
?kable
library(knitr)
colnames(st)
?randomForest
library(randomForest)
?randomForest
?xgboost
library(xgboost)
?xgboos
?xgboost
toi <- data.frame("strategy/algorithm"=c("pca1","pca123","lasso (rep1)","svm (rep1)","rf (rep4)","xgboost (rep5)"),
"importance metric"=c("variance contrib.", "variance contrib.", "model coefficient", "model weight", "importance, mean dec. node purity", "importance"),
"imp. criteria"=c(">null", ">null", "selection", ">0.008 (>90th quantile)",
">0.1 importance (>90th quantile)","selection"))
kable(toi, caption="Ontology terms of interest, and their free text labels, targeted for manual validation.") %>%
kable_styling(font_size = 12)
library(dplyr)
toi <- data.frame("strategy/algorithm"=c("pca1","pca123","lasso (rep1)","svm (rep1)","rf (rep4)","xgboost (rep5)"),
"importance metric"=c("variance contrib.", "variance contrib.", "model coefficient", "model weight", "importance, mean dec. node purity", "importance"),
"imp. criteria"=c(">null", ">null", "selection", ">0.008 (>90th quantile)",
">0.1 importance (>90th quantile)","selection"))
kable(toi, caption="Ontology terms of interest, and their free text labels, targeted for manual validation.") %>%
kable_styling(font_size = 12)
library(kableExtra)
toi <- data.frame("strategy/algorithm"=c("pca1","pca123","lasso (rep1)","svm (rep1)","rf (rep4)","xgboost (rep5)"),
"importance metric"=c("variance contrib.", "variance contrib.", "model coefficient", "model weight", "importance, mean dec. node purity", "importance"),
"imp. criteria"=c(">null", ">null", "selection", ">0.008 (>90th quantile)",
">0.1 importance (>90th quantile)","selection"))
kable(toi, caption="Ontology terms of interest, and their free text labels, targeted for manual validation.") %>%
kable_styling(font_size = 12)
toi <- data.frame("strategy"=c("pca1","pca123","lasso (rep1)","svm (rep1)","rf (rep4)","xgboost (rep5)"),
"imp_metric"=c("variance contrib.", "variance contrib.", "model coefficient", "model weight", "importance, mean dec. node purity", "importance"),
"imp_criteria"=c(">null", ">null", "selection", ">0.008 (>90th quantile)",
">0.1 importance (>90th quantile)","selection"))
kable(toi, caption="Ontology terms of interest, and their free text labels, targeted for manual validation.") %>%
kable_styling(font_size = 12)
toi <- data.frame("strategy"=c("pca1","pca123","lasso (rep1)","svm (rep1)","rf (rep4)","xgboost (rep5)"),
"imp_metric"=c("variance contrib.", "variance contrib.", "model coefficient", "model weight", "importance, mean dec. node purity", "importance"),
"imp_criteria"=c(">null", ">null", "selection", ">0.008 (>90th quantile)",
">0.1 importance (>90th quantile)","selection"))
kable(toi, caption="Supplemental Table 1. Ontology terms of interest, and their free text labels, targeted for manual validation.") %>%
kable_styling(font_size = 12)
